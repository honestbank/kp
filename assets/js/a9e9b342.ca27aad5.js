"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[280],{1339:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>l,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"middlewares/retrycounter","title":"Retry Count","description":"The retry count middleware is a middleware for the KP library that adds the current retry count to the context of the message processing. The retry count is the number of times the message has been retried by the retry middleware.","source":"@site/docs/middlewares/retrycounter.md","sourceDirName":"middlewares","slug":"/middlewares/retrycounter","permalink":"/kp/docs/middlewares/retrycounter","draft":false,"unlisted":false,"editUrl":"https://github.com/honestbank/kp/edit/main/docs/docs/middlewares/retrycounter.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Tracing","permalink":"/kp/docs/middlewares/tracing"},"next":{"title":"retry","permalink":"/kp/docs/middlewares/retry"}}');var o=r(4848),s=r(8453);const i={sidebar_position:7},d="Retry Count",a={},c=[{value:"Example",id:"example",level:3}];function u(e){const t={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"retry-count",children:"Retry Count"})}),"\n",(0,o.jsx)(t.p,{children:"The retry count middleware is a middleware for the KP library that adds the current retry count to the context of the message processing. The retry count is the number of times the message has been retried by the retry middleware."}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["If you forget to add the middleware and tried to access the value, it's going to return ",(0,o.jsx)(t.code,{children:"int(0)"})]})}),"\n",(0,o.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,o.jsxs)(t.p,{children:["To use the retry count middleware, you first need to add ",(0,o.jsx)(t.code,{children:"RetryCountMiddleware"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n\t"context"\n\t"fmt"\n\t"github.com/confluentinc/confluent-kafka-go/kafka"\n\t"github.com/honestbank/kp/v2/consumer"\n\n\t"github.com/honestbank/kp/v2"\n\t"github.com/honestbank/kp/v2/middlewares/retry_count"\n)\n\nfunc getConsumer() consumer.Consumer {\n    return nil // omitted for brevity\n}\nfunc main() {\n\tkp := v2.New[kafka.Message]()\n\tkp.AddConsumer(getConsumer())\n\tkp.AddMiddleware(retry_count.NewRetryCountMiddleware()) // This adds retry count middleware\n\terr := kp.Process(processUserLoggedInEvent)\n\tif err != nil {\n\t\tpanic(err) // do better error handling\n\t}\n}\n\nfunc processUserLoggedInEvent(ctx context.Context, message *kafka.Message) error {\n\tcount := retry_count.FromContext(ctx) // this is how to get the count\n\tfmt.Printf("this message was processed %d times", count)\n\treturn nil // or error\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>d});var n=r(6540);const o={},s=n.createContext(o);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);