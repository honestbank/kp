"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[801],{1270:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"middlewares/tracing","title":"Tracing","description":"Tracing is a powerful tool that helps understand how a request flows through the system.","source":"@site/docs/middlewares/tracing.md","sourceDirName":"middlewares","slug":"/middlewares/tracing","permalink":"/kp/docs/middlewares/tracing","draft":false,"unlisted":false,"editUrl":"https://github.com/honestbank/kp/edit/main/docs/docs/middlewares/tracing.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Metrics","permalink":"/kp/docs/middlewares/metrics"},"next":{"title":"Retry Count","permalink":"/kp/docs/middlewares/retrycounter"}}');var s=r(4848),a=r(8453);const i={sidebar_position:6},o="Tracing",c={},d=[{value:"Sample trace",id:"screenshot",level:2},{value:"Example",id:"example",level:3}];function l(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"tracing",children:"Tracing"})}),"\n",(0,s.jsx)(t.p,{children:"Tracing is a powerful tool that helps understand how a request flows through the system.\nIn order to enable tracing in KP, you can add the middlewares.Tracing middleware."}),"\n",(0,s.jsx)(t.p,{children:"This middleware will start a new trace span for every message processed and record any errors that occur during processing. It will also inject trace headers into the message if they are not already present."}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsx)(t.p,{children:"Using trace middleware without a correctly configured trace provider will result in invalid spans being produced."})}),"\n",(0,s.jsx)(t.h2,{id:"screenshot",children:"Sample trace"}),"\n",(0,s.jsxs)(t.p,{children:["In the following picture, a message failed to be processed 6 times and was successfully processed the 7th time.\n",(0,s.jsx)(t.img,{alt:"tracing screenshot",src:r(6666).A+"",width:"1917",height:"515"})]}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(t.p,{children:["To use this middleware, you will need to provide a ",(0,s.jsx)(t.code,{children:"TracerProvider"})," that creates Tracer instances."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n\t"context"\n\t"github.com/confluentinc/confluent-kafka-go/kafka"\n\t"github.com/honestbank/kp/v2/middlewares/retry"\n\t"os"\n\n\t"github.com/honestbank/kp/v2"\n\t"github.com/honestbank/kp/v2/middlewares/tracing"\n\t"go.opentelemetry.io/otel"\n\t"go.opentelemetry.io/otel/exporters/jaeger"\n\t"go.opentelemetry.io/otel/sdk/resource"\n\t"go.opentelemetry.io/otel/sdk/trace"\n\tsemconv "go.opentelemetry.io/otel/semconv/v1.10.0"\n)\n\nfunc main() {\n\tdefer setupTracing()() // this is important and not included in KP\n\tkp := v2.New[kafka.Message]()\n\tkp.AddMiddleware(tracing.NewTracingMiddleware(otel.GetTracerProvider())) // This adds tracing middleware\n\tkp.AddMiddleware(retry.NewRetryMiddleware(producer, func(err error) {}))\n\tkp.AddMiddleware(tracing.NewTracingMiddleware(otel.GetTracerProvider())) // This adds tracing middleware\n\terr := kp.Process(processUserLoggedInEvent)\n\tif err != nil {\n\t\tpanic(err) // do better error handling\n\t}\n}\n\nfunc processUserLoggedInEvent(ctx context.Context, message *kafka.Message) error {\n\t// here, you can focus on your business logic.\n\tfmt.Printf("processing %v\\n", message)\n\ttime.Sleep(time.Millisecond * 200) // simulate long-running process\n\treturn nil                         // or error\n}\n\nfunc setupTracing() func() {\n\texporter, err := jaeger.New(jaeger.WithCollectorEndpoint(jaeger.WithEndpoint(os.Getenv("COLLECTOR_URL"))))\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tresc := resource.Default()\n\ttp := trace.NewTracerProvider(\n\t\ttrace.WithBatcher(exporter),\n\t\ttrace.WithResource(resc),\n\t\ttrace.WithResource(resource.NewWithAttributes(semconv.SchemaURL, semconv.ServiceNameKey.String("form-service-web"))),\n\t)\n\totel.SetTracerProvider(tp)\n\treturn func() {\n\t\texporter.Shutdown(context.Background())\n\t\ttp.Shutdown(context.Background())\n\t}\n}\n\nfunc getConfig() any {\n\treturn nil // return your config\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"With this setup, all messages processed by KP will have trace spans created for them and any errors that occur will be recorded in the trace span. These trace spans can then be exported to a trace backend for further analysis."})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},6666:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/tracing_example-93f542887a63a7747e14bd66ebdeb2c4.png"},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(6540);const s={},a=n.createContext(s);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);