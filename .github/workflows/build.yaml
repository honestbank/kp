name: go-tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: go-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ "1.18" ]
    steps:
      - name: Set up Golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: mocks
        run: make generate

      - name: Setup go modules
        run: go clean -modcache;go mod tidy; go mod download; go mod verify;

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --timeout=5m --modules-download-mode=readonly
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Test and generate code coverage
        run: go test -v -race --tags=integration_test -coverprofile=coverage.txt -covermode=atomic ./...

      - name: sonarcloud-scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true
  release:
    name: semantic-release
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Set up Golang
        uses: actions/setup-go@v2
        with:
          go-version: "1.18"
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 18
          extra_plugins: |
            @semantic-release/git@10.0.1
            @semantic-release/exec@6.0.2
            @semantic-release/changelog@6.0.1
