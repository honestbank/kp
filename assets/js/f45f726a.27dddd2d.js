"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[728],{8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var t=o(6540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}},9557:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"middlewares/backoff","title":"Backoff","description":"The backoff middleware slows down the processing of messages when errors occur. It uses a backoff policy to determine how long to wait between processing attempts.","source":"@site/docs/middlewares/backoff.md","sourceDirName":"middlewares","slug":"/middlewares/backoff","permalink":"/kp/docs/middlewares/backoff","draft":false,"unlisted":false,"editUrl":"https://github.com/honestbank/kp/edit/main/docs/docs/middlewares/backoff.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Consumer","permalink":"/kp/docs/middlewares/consumer"},"next":{"title":"Metrics","permalink":"/kp/docs/middlewares/metrics"}}');var s=o(4848),i=o(8453);const r={sidebar_position:4},a="Backoff",c={},d=[{value:"Example",id:"example",level:3}];function f(e){const n={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"backoff",children:"Backoff"})}),"\n",(0,s.jsx)(n.p,{children:"The backoff middleware slows down the processing of messages when errors occur. It uses a backoff policy to determine how long to wait between processing attempts."}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Adding multiple backoff middleware is possible."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"context"\n\t"fmt"\n\t"time"\n\n\t"github.com/confluentinc/confluent-kafka-go/kafka"\n\tbackoff_policy "github.com/honestbank/backoff-policy"\n\t"github.com/honestbank/backoff-policy/policies"\n\tv2 "github.com/honestbank/kp/v2"\n\t"github.com/honestbank/kp/v2/middlewares/backoff"\n)\n\nfunc main() {\n\tkp := v2.New[kafka.Message]()\n\texponent, duration, maxBackoffCount := 1.5, time.Millisecond*200, 10\n\tbackoffPolicy := backoff_policy.NewBackoff(policies.GetExponentialPolicy(exponent, duration, maxBackoffCount))\n\tkp.AddMiddleware(backoff.NewBackoffMiddleware(backoffPolicy)) // simply add a backoff middleware to back off.\n\terr := kp.Process(processUserLoggedInEvent)\n\tif err != nil {\n\t\tpanic(err) // do better error handling\n\t}\n}\n\nfunc processUserLoggedInEvent(ctx context.Context, message *kafka.Message) error {\n\t// here, you can focus on your business logic.\n\tfmt.Printf("processing %v\\n", message)\n\ttime.Sleep(time.Millisecond * 200) // simulate long running process\n\treturn nil // or error\n}\n\nfunc getConfig() any {\n\treturn nil // return your config\n}\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}}}]);