# DO NOT CHANGE. This file is being managed from a central repository
# To know more simply visit https://github.com/honestbank/.github/blob/main/docs/about.md

version: "3.0"
services:
  db:
    image: mysql:8
    ports:
      - "3306:3306"
    environment:
      - MYSQL_USER=dbuser
      - MYSQL_PASSWORD=dbpass
      - MYSQL_DATABASE=my_db
      - MYSQL_RANDOM_ROOT_PASSWORD=true
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    restart: "always"
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    restart: "always"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_SCHEMA_REGISTRY_URL: "http://schemaregistry:8082"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_NUM_PARTITIONS: 1
    depends_on:
      - zookeeper
  schemaregistry:
    image: confluentinc/cp-schema-registry:7.3.2
    restart: always
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:19092"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8082"
    ports:
      - 8082:8082
  wiremock:
    container_name: wiremock
    hostname: wiremock
    ports:
      - "8085:8080"
    image: wiremock/wiremock
    volumes:
      - ./wiremock/stubs:/home/wiremock
  gcs:
    image: oittaa/gcp-storage-emulator:latest
    ports:
      - "8080:8080"
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    hostname: kafdrop
    restart: "always"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:19092"
    depends_on:
      - "kafka"
  s3:
    image: adobe/s3mock
    container_name: s3mock
    environment:
      - initialBuckets=bucket1
      - root=containers3root
      - debug=true
    ports:
      - 9090:9090
  sftp:
    container_name: sftp
    image: atmoz/sftp
    volumes:
      - ./integration/sftp:/home/foo/upload
    ports:
      - "2222:22"
    command: foo:pass:1001
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass "redis"
    ports:
      - "6379:6379"
  push_gateway:
    image: prom/pushgateway:latest
    ports:
      - "9091:9091"
